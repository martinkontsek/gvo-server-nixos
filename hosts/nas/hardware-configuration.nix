# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ata_piix" "uhci_hcd" "xhci_pci_renesas" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d8d4e0f3-da7c-4742-8ca5-8f5bb7271b8a";
      fsType = "ext4";
    };

  fileSystems."/media/hdd2T1" =
    { device = "/dev/disk/by-uuid/6e81b601-f09e-4960-b8b9-10373ffc81ef";
      fsType = "xfs";
    };

  fileSystems."/media/hdd2T2" =
    { device = "/dev/disk/by-uuid/7a6976a0-8944-412d-be41-93eac49edf64";
      fsType = "xfs";
    };

  fileSystems."/media/hdd2T3" =
    { device = "/dev/disk/by-uuid/513bd4ec-2efc-4633-a420-99635b2ec399";
      fsType = "xfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/77b44b4b-5f41-4dfe-bbd6-96aa198ec8a6"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens1f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens1f1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
